<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>KidLet's Blog</title>
 <link href="http://kidlet.github.com/atom.xml" rel="self"/>
 <link href="http://kidlet.github.com"/>
 <updated>2013-02-28T00:44:55+08:00</updated>
 <id>http://kidlet.github.com</id>
 <author>
   <name>KidLet</name>
   <email>kidlets@qq.com</email>
 </author>

 
 <entry>
   <title>JavaScript学习笔记 （3）变量</title>
   <link href="http://kidlet.github.com/2013/02-22/variable.html"/>
   <updated>2013-02-22T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/2013/02-22/variable</id>
   <content type="html">&lt;p&gt;当计算机需要保留一个值便于以后使用， 值可以被 赋值（或者说存储）到“变量”（variable）中。变量定义了它的名字，并且可以通过名字来操作它所存储的值。&lt;/p&gt;

&lt;h1&gt;变量声明 （declare）&lt;/h1&gt;

&lt;h2&gt;变量声明 （declare）&lt;/h2&gt;

&lt;p&gt;在使用一个变量的时候，需要先声明（declare）它，变量的声明采用关键字 &lt;code&gt;var&lt;/code&gt;，下面是例子：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以同时声明多个变量，通过逗号分隔开(,)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在声明变量的时候，同时也可以为变量初始化，就像下面这样。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果不为变量初始化，那么默认变量为&lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;JavaScript声明变量的时候无需指出变量的类型，因为JavaScript变量可以容纳任意类型的值&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ten&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>JavaScript学习笔记 （2）类型和值</title>
   <link href="http://kidlet.github.com/2013/02-12/Types.html"/>
   <updated>2013-02-12T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/2013/02-12/Types</id>
   <content type="html">&lt;p&gt;计算机通过操作“值”（value）来进行工作， 例如 数字3.14, 文本“Hello World”。可以被计算和进行操作的“值”的种类叫类型（type）。&lt;/p&gt;

&lt;p&gt;JavaScript 类型可以分为两大类：自有类型（primitive types）， 对象类型（object types）&lt;/p&gt;

&lt;p&gt;1.自有类型包括：数字，字符串，布尔值。&lt;/p&gt;

&lt;p&gt;2.对象类型：除了自有类型剩下的就是对象类型，主要有，数组，函数，正则表达式，自定义对象等。&lt;/p&gt;

&lt;h2&gt;数字 （Numbers）&lt;/h2&gt;

&lt;p&gt;与其他语编程言不同的是， JavaScript并没有区分 整数和浮点数， 所有的数字在JavaScript中都是用64位浮点的方式保存的，采用IEEE 754标准。 值得注意的是， 在数组的索引（下标）和位运算的操作符的整数是采用32位整数表示的。&lt;/p&gt;

&lt;p&gt;直接出现在 JavaScript代码中的数字 叫做 数值文字（numeric literal）。&lt;/p&gt;

&lt;h3&gt;整数表示&lt;/h3&gt;

&lt;p&gt;对于要表示十进制整数，可以在代码中直接编写，非常符合自然阅读习惯。&lt;/p&gt;

&lt;p&gt;JavaScript支持十六进制表示， 只要在前面加上 “0X” 或者 “0x”， 后面是 十六进制整数数字就可以了&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 15*16 + 15 = 255 (base 10)&lt;/span&gt;
&lt;span class=&quot;mh&quot;&gt;0xCAFE911&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;JavaScript对以前导“0”来表示八进制数的支持不是很好，不推荐使用，并且在ECMAScript 5 中已经明确禁止了这种方法。&lt;/p&gt;

&lt;h3&gt;浮点数表示&lt;/h3&gt;

&lt;p&gt;这里的表示和 C，JAVA等类似
下面是例子，看完例子也就明白了。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2345.789&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;333333333333333333&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;6.02e23&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// 6.02 × 10^23&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.4738223&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 1.4738223 × 10^−32&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然更正规的表示如下：[digits][.digits][(E|e)[(+|-)]digits]&lt;/p&gt;

&lt;h2&gt;字符串&lt;/h2&gt;

&lt;p&gt;JavaScript字符串的定义是：一串有序的不可变的 16位Unicode值。字符串的长度是它所包含的16位Unicode字符的数量。字符串也是数组，下标也是从0开始。空字符串的长度为0。JavaScript没有特定的一种类型来表示字符，如果要表示单个字符，可以使用长度为1的字符串。&lt;/p&gt;

&lt;h3&gt;字符串表示&lt;/h3&gt;

&lt;p&gt;在代码中要表示字符串， 可以简单的用单引号（'）或者双引号（&quot;）将文本括起来。下面是一些字符串表示的例子&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The empty string: it has zero characters&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;testing&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;3.14&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;name=&amp;quot;myform&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;Wouldn&amp;#39;t you prefer O&amp;#39;Reilly&amp;#39;s book?&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;This string\nhas two lines&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;π is the ratio of a circle&amp;#39;s circumference to its diameter&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;字符串转义&lt;/h3&gt;

&lt;p&gt;有时候要在字符串中表达一些无法输入或者会引起歧义的字符，那么常常需要借助转义符反斜杠“\”&lt;/p&gt;

&lt;p&gt;例如：'You\'re right, it can\'t be a quote'
它所表示的字符串为：You're right, it can't be a quote&lt;/p&gt;

&lt;p&gt;可以看到反斜杠后面跟着的单引号并不是 字符串的界定符，而是一个实在的文本表示
下面是一些转义的规则&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\0 空字符 (\u0000)
\b 空格 (\u0008)
\t 水平制表符 (\u0009)
\n 换行 (\u000A)
\v 垂直制表符 (\u000B)
\f 换页符 (\u000C)
\r 回车符 (\u000D)
\&quot; 双引号 (\u0022)
\' 单引号 (\u0027)
\\ 反斜杠 (\u005C)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;简单使用字符串&lt;/h3&gt;

&lt;p&gt;JavaScript有个特性是可以随意地连接（concatenate）字符串， 利用 “+” 操作符。当 “+” 用在数值类型时，代表将两个数相加。而在字符串运算时，代表将两个字符串连接在一起。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello, &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Produces the string &amp;quot;Hello, world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Welcome to my blog,&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要获取某个字符串的长度可以用 &lt;code&gt;length&lt;/code&gt; 属性&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;kidlet&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面是一些基本使用&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello, world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//返回第一个字符&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//返回最后一个字符&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//返回从 第二个字符到第四个字符形成的子串&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//返回第一次出现“l”的位置&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//返回最后一次出现“l”的位置&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//返回从第三个字符开始第一次出现“l”的位置&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;正则表达式&lt;/h3&gt;

&lt;p&gt;脚本语言基本上都有个特点是 支持正则表达式，用于匹配、替换文本等等。在很大程度上简化程序。
在JavaScript中可以利用， RegExp() 来创建RegExp对象，它的正则表达式语法与Perl保持一致&lt;/p&gt;

&lt;p&gt;下面是一个例子：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;testing: 1, 2, 3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\d+/g&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//匹配任意的数字&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//true， 存在匹配&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//9,第一个匹配所在的位置&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//[&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;]，所有匹配的数组结果&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&amp;quot;testing: #, #, #&amp;quot;，将所有匹配成功的数字替换为 #&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;布尔值 （Boolean Values）&lt;/h2&gt;

&lt;p&gt;一个布尔值代表着 真或者假，开或者关，对或者错。对于布尔类型来说，只存在两个值，它们分别被用保留字 &lt;br/&gt;
&lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 来表示。&lt;/p&gt;

&lt;p&gt;布尔值通常都被用来作为比较返回的结果&lt;/p&gt;

&lt;p&gt;以下的的值都可以被转换为 false&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;undefined
null
0
-0
NaN
&quot;&quot; // 空串
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除此以外的其他值均可以转换为 true&lt;/p&gt;

&lt;p&gt;布尔值有一个 toString() 方法，可以将布尔值转为 “true” 或者 “false”字符串&lt;/p&gt;

&lt;p&gt;并且还有三个运算符可以进行布尔值运算，分别是 &amp;amp;&amp;amp;运算符 代表布尔与运算， ||运算符 代表布尔或运算&lt;/p&gt;

&lt;p&gt;!运算符 代表布尔非运算&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// x 和 y 都是0 或者 z 不是0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;null 和 undefined&lt;/h2&gt;

&lt;p&gt;null是一个关键字，用来表示缺少值，空值的意思。同时也表示一个特殊对象值“no object”。它的含义类似其他语言中的null或者ruby中的nil。&lt;/p&gt;

&lt;p&gt;JavaScript还有另外一个特殊值用来表示更深层含义的 “值不存在” -- undefined&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;有两种含义：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;变量的值未初始化&lt;/li&gt;
&lt;li&gt;对象的属性不存在或者数组的元素不存在&lt;/li&gt;
&lt;li&gt;函数没有返回值&lt;/li&gt;
&lt;li&gt;没有为函数的参数（parameter）提供实参（argument）&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;null和undefined被 == 运算符认为是一样的
但是可以使用 === （strict equality operator）来区分他们&lt;/p&gt;

&lt;h3&gt;null 和 undefined 的理解&lt;/h3&gt;

&lt;p&gt;可以理解null表示是 程序级别的（program-level），正常的，预期的缺少值。&lt;/p&gt;

&lt;p&gt;undefined表示的是 系统级别的（system-level），异常的，错误的缺少值。&lt;/p&gt;

&lt;p&gt;如果需要传递参数，赋值一个“缺少值”的含义等操作，选择null通常是正确选择。&lt;/p&gt;

&lt;h2&gt;变量 （Variable）&lt;/h2&gt;

&lt;p&gt;在使用一个变量的时候，需要先声明（declare）它，变量的声明采用关键字 &lt;code&gt;var&lt;/code&gt;，下面是例子：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以同时声明多个变量，通过逗号分隔开(,)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在声明变量的时候，同时也可以为变量初始化，就像下面这样。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果不为变量初始化，那么默认变量为&lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;JavaScript声明变量的时候无需指出变量的类型，因为JavaScript变量可以容纳任意类型的值&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ten&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>JavaScript学习笔记 （1）语法结构</title>
   <link href="http://kidlet.github.com/2013/02-12/LexicalStructure.html"/>
   <updated>2013-02-12T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/2013/02-12/LexicalStructure</id>
   <content type="html">&lt;p&gt;语法结构是 编程语言中 最基础的语法，它定义了 应该怎样编写程序，变量名字的要求，注释的界定符号等等。&lt;/p&gt;

&lt;h2&gt;字符集&lt;/h2&gt;

&lt;p&gt;JavaScript程序编写采用的是 &lt;code&gt;Unicode&lt;/code&gt;字符集。&lt;/p&gt;

&lt;h3&gt;Unicode 换码规则&lt;/h3&gt;

&lt;p&gt;因为有些系统无法输入所有Unicode字符，所以定义了一种换码规则，在 JavaScript的文本表示，或者正则表达式中，以 \u 开头后面跟着 4位 16进制码 来表示任意的 16-bit Unicode码，下面是一个例子&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;café&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;caf\u00e9&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Unicode的常态 (Normalization)&lt;/h3&gt;

&lt;p&gt;Unicode允许不同的编码 来表示同样的字符
比如 字符 “é”， 它既可以通过 \u00E9 也可以 用 \u0301 来表示，但是它在文本编辑器上看并没有什么不同。但是对JavaScript来说，“\u00E9”和“\u0301” 被认为是不同的。&lt;/p&gt;

&lt;h2&gt;区分大小写&lt;/h2&gt;

&lt;p&gt;JavaScript是 &lt;strong&gt;区分大小写&lt;/strong&gt; 的语言。也就是说，关键字，变量名，函数名和其他标志符等等大小写是被认为不同的。&lt;/p&gt;

&lt;p&gt;值得注意的是，在HTML中，是不区分大小写的（XHTML则除外），但是在JavaScript中这些必须被写成小写的。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;比如在HTML 的 &lt;code&gt;onclick&lt;/code&gt; 事件,有时候会被写成 &lt;code&gt;onClick&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是在JavaScript中必须写为 &lt;code&gt;onclick&lt;/code&gt; 才能生效&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;注释&lt;/h2&gt;

&lt;p&gt;注释是用来对代码进行解释说明，并且会被编译器（解释器）所忽略的部分。JavaScript 有两种风格的注释，并且和 C语言 的一样。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// 这是一行注释
以 // 开头到行的末尾 构成注释

/*
这也是注释
可以是多行
*/

以 /* 开始 ， 以 */ 结束的内容会被当成注释
注意， 不可以嵌套。 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;标识符和保留字&lt;/h2&gt;

&lt;h3&gt;标识符&lt;/h3&gt;

&lt;p&gt;标识符：一个简单名字，用来给变量、函数等命名。
开头必须是，下划线（_），$符号, 英文字母
剩下的部分 可以是 下划线（_），$符号, 英文字母， 数字&lt;/p&gt;

&lt;h3&gt;保留字&lt;/h3&gt;

&lt;p&gt;JavaScript自己保留了许多标识符作为它自己的 关键字，所以不能将这些保留字作为 自己程序的标识符。
现在并不需要去背诵记住， 但是要有个大概的了解。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;    &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;debugger&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;           &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;    &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;       &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;并且 JavaScript 还预先定义了许多全局变量和函数，在进行编写代码的时候应该尽量避开。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;arguments, Array, Boolean, Date, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent, Error, eval, EvalError, Function, Infinity, isFinite, isNaN, JSON, Math, NaN, Number, Object, parseFloat, parseInt, RangeError, ReferenceError, RegExp, String, SyntaxError, TypeError, undefined, URIError&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;可选的分号&lt;/h2&gt;

&lt;p&gt;如果学过C语言， 一定会对分号“;”的作用非常了解。它通常被用来说明语句的结束。在JavaScript中， 可以省略分号，前提是在不引起歧义的情况下。但是我个人推荐不省略分号，因为那是一个好习惯， 它会让你的代码看起来更整洁。&lt;/p&gt;

&lt;h2&gt;小结&lt;/h2&gt;

&lt;p&gt;从本节中， 可以发现JavaScript的很多特性与C语言保持一致。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于我的博客</title>
   <link href="http://kidlet.github.com/2013/02-09/Myblog.html"/>
   <updated>2013-02-09T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/2013/02-09/Myblog</id>
   <content type="html">&lt;p&gt;这个博客是基于 Jekyll 搭建的，并且托管在Github， 目的是 发一些平时学到知识，多写些文字会对原来的理解，进一步加深。同时也可以锻炼下前端方面的知识。&lt;/p&gt;

&lt;h2&gt;兼容性&lt;/h2&gt;

&lt;p&gt;前端最担心就是 浏览器之间的兼容性问题，往往在Firefox， Chrome 上看起来非常精致的网页，放到 IE 上就会变得一塌糊涂。 不过好在 这个博客内容相对比较简单，而且用的是比较标准的 XHTML1.0 和 CSS2 （极小部分使用了CSS3） 兼容性问题处理起来还不太费力。&lt;/p&gt;

&lt;h3&gt;目前在以下浏览器测试通过&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;IE 8&lt;/li&gt;
&lt;li&gt;Chrome 24&lt;/li&gt;
&lt;li&gt;Firefox 18&lt;/li&gt;
&lt;li&gt;IE 9&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;待测试浏览器：IE 10, Safari。
仍出现问题浏览器： IE 6, IE 7&lt;/p&gt;

&lt;h3&gt;出现的兼容性问题&lt;/h3&gt;

&lt;h4&gt;1. &amp;lt;a&gt; &amp;lt;img&gt;&lt;/h4&gt;

&lt;p&gt;问题出现在 IE 6 到 IE 8
当 &amp;lt;a&gt; 标签里面 嵌入 &amp;lt;img&gt; 标签后， IE 会自动 给图片加上 2px宽边框&lt;/p&gt;

&lt;h4&gt;2. position: fixed&lt;/h4&gt;

&lt;p&gt;IE 6 不支持 CSS 的 position: fixed 属性
这里是用于 “回到顶部” 功能。&lt;/p&gt;

&lt;h4&gt;3. png 背景透明&lt;/h4&gt;

&lt;p&gt;IE 6 使用 png 时候， 透明的位置会用灰白色的方块替换，影响美观。&lt;/p&gt;

&lt;h4&gt;4.IE 6, 7 排版问题&lt;/h4&gt;

&lt;p&gt;初步是怀疑 对 Min-width 的解析问题&lt;/p&gt;

&lt;h2&gt;主体框架&lt;/h2&gt;

&lt;h3&gt;Jekyll&lt;/h3&gt;

&lt;p&gt;Jekyll 是一个非常棒的 静态博客， 采用了 Markdown 等方式来写博文， 并且采用 Liquid模板系统， 所以具有很高的定制性。&lt;/p&gt;

&lt;p&gt;这里我主要写了 两个模板 default.html 和 post.html
以及 自己修改了 Jekyll-bootstrap 的一些内置函数以适应 我的博客。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|-- index.md
|-- archive.html
|-- assets
    |-- css
        |-- default.css
        |-- global.css
        |-- post.css
        |-- pygments.css
   |-- img
   |-- js
   |-- font
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;待完成任务&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;回到顶部动画效果&lt;/li&gt;
&lt;li&gt;完善代码注释信息&lt;/li&gt;
&lt;li&gt;添加首页分页功能&lt;/li&gt;
&lt;li&gt;编写 “关于” 页面&lt;/li&gt;
&lt;li&gt;Safari， Opera， IE10,  IE9 浏览器兼容性测试&lt;/li&gt;
&lt;li&gt;添加博文摘要导航&lt;/li&gt;
&lt;li&gt;添加图片友好显示效果&lt;/li&gt;
&lt;li&gt;前端优化 （非必要）&lt;/li&gt;
&lt;li&gt;SEO 优化&lt;/li&gt;
&lt;li&gt; fix IE 6 “回到顶部”&lt;/li&gt;
&lt;li&gt;支持手机浏览&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;博客开发历程&lt;/h2&gt;

&lt;p&gt;2013-1-27 用 Evolus Pencil 创建 博客主页原型&lt;/p&gt;

&lt;p&gt;2013-1-28 开始编写 主页 相应模板 和 CSS&lt;/p&gt;

&lt;p&gt;2013-2-06 粗略勾画 博文页面原型&lt;/p&gt;

&lt;p&gt;2013-2-07 大体完成 博文页面 模板&lt;/p&gt;

&lt;p&gt;2013-2-08 进行测试和完善 Markdown 显示， 针对IE 进行CSS完善&lt;/p&gt;

&lt;p&gt;2013-2-09 博客基本完工，发表第一篇博文&lt;/p&gt;

&lt;p&gt;2013-2-12 调节了首页博文标题从h2改h3， 博客通过 IE9, Opera 测试&lt;/p&gt;
</content>
 </entry>
 
 
</feed>