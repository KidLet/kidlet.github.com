<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>KidLet's Blog</title>
 <link href="http://kidlet.github.com/atom.xml" rel="self"/>
 <link href="http://kidlet.github.com"/>
 <updated>2013-01-17T18:20:04+08:00</updated>
 <id>http://kidlet.github.com</id>
 <author>
   <name>KidLet</name>
   <email>kidlets@qq.com</email>
 </author>

 
 <entry>
   <title>Ruby 入门 （0） 搭建环境</title>
   <link href="http://kidlet.github.com/Ruby/2013-01-17/learn-ruby-1"/>
   <updated>2013-01-17T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/Ruby/2013-01-17/learn-ruby-1</id>
   <content type="html">&lt;p&gt;环境 &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id='_'&gt;第一步 前提&lt;/h4&gt;

&lt;p&gt;先安装一些必要的东西， 因为我们要先安装 &lt;code&gt;RVM&lt;/code&gt; （Ruby Version Manager）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git curl&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='_rvm'&gt;第二步 安装RVM&lt;/h4&gt;

&lt;p&gt;安装 RVM 采用官方建议的做法&lt;/p&gt;
&lt;p&gt;1. 执行下列命令， 建议在网络情况较好的时候执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\curl https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer | bash -s stable&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;等待一段时间后会提示 安装成功&lt;/p&gt;
&lt;p&gt;2. 修改 ~/.bashrc 文件 用编辑器打开并在 最后添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;不添加的话会导致 rvm 无法正常执行 出现 RVM is not a function 的错误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3. 执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. 运行 rvm requirements 查看仍需要安装的库&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo /usr/bin/apt-get install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id='_ruby'&gt;第三步 安装Ruby&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;rvm list known&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;span style='color: #339966;'&gt;#查看可以安装哪些版本&lt;/span&gt;&lt;/li&gt;

&lt;li&gt;rvm install 1.9.3&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;span style='color: #339966;'&gt;#安装Ruby 1.9.3&lt;/span&gt;&lt;/li&gt;

&lt;li&gt;rvm use 1.9.3 &amp;#8211;default&amp;#160;&amp;#160;&lt;span style='color: #339966;'&gt;#使用指定版本并设为默认， 这样不用每次重启机器后 执行 rvm use 命令&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id='_gem'&gt;第四步 修改Gem镜像&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;由于在 第三步的时候已经帮我们安装好了 RubyGems 无需另外去下载安装了 为了提高 Gem 的 安装包的速度 我们删除国外的源， 添加国内的 &lt;a href='http://ruby.taobao.org/'&gt;淘宝源&lt;/a&gt; http://ruby.taobao.org/&lt;/li&gt;

&lt;li&gt;gem sources -a http://ruby.taobao.org/ &lt;span style='color: #339966;'&gt;#添加源&lt;/span&gt;&lt;/li&gt;

&lt;li&gt;gem sources -r https://rubygems.org/ &amp;#160;&amp;#160;&lt;span style='color: #339966;'&gt;#删除官方源&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Tip&lt;/code&gt; : 可以通过 gem sources -l 来查看所有添加了的源&lt;/p&gt;

&lt;h4 id='id5'&gt;总结&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;此时你 已经可以执行 ruby -v 和 gem -v 成功， 并显示相应的版本 建议通过RVM来安装Ruby， 可以较方便的管理你的Rubys 后续还可以 通过Gem安装Rails等组件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;参考:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='https://rvm.io/rvm/install/'&gt;Installing RVM (官方)&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.ruchee.com/code/ruby/tools/ubuntu.html'&gt;Ubuntu下RoR开发环境的安装&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>Ubuntu下卸载 Ruby RubyGems Rails</title>
   <link href="http://kidlet.github.com/Ruby/2013-01-08/ubuntu-install-ruby"/>
   <updated>2013-01-08T00:00:00+08:00</updated>
   <id>http://kidlet.github.com/Ruby/2013-01-08/ubuntu-install-ruby</id>
   <content type="html">&lt;p&gt;环境 &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt; &lt;strong&gt;Ruby1.9.3&lt;/strong&gt; &lt;strong&gt;RubyGem1.8.24&lt;/strong&gt; &lt;strong&gt;Rails3.2.9&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因为想装RVM 所以要对上述程序进行删除，其中 &lt;code&gt;Ruby&lt;/code&gt; 和 &lt;code&gt;RubyGem&lt;/code&gt; 均是采用从官方下载源代码进行编译安装的&lt;/p&gt;

&lt;p&gt;结果发现 官方提供的 Makefile 文件并没有提供 uninstall功能， 而当初我在configure的时候也并没有指定 prefix参数&lt;/p&gt;

&lt;p&gt;所以都是采用默认路径安装的。&lt;/p&gt;

&lt;p&gt;首先我们先卸载 通过 Gem 安装的东西。 通过 gem list 可以看到安装了哪些， 其中当然包括了rails。但是多达几十项显然不可能手工&lt;/p&gt;

&lt;p&gt;gem uninstall 来删除， 于是写了个python脚本 （请用&lt;code&gt;sudo&lt;/code&gt;来执行）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /usr/bin/env python3
# Code by KidLet  12.19
import subprocess
import re
 
(status, output) = subprocess.getstatusoutput(&amp;quot;gem list&amp;quot;)
 
#print( output )
lines = output.split (&amp;#39;\n&amp;#39;)
for line in lines:
    name = line.split (&amp;#39; &amp;#39;, 1 )
    subprocess.getstatusoutput(&amp;quot;gem uninstall &amp;quot;+name[0]+&amp;quot; -a -x -I&amp;quot;)
    #print ( &amp;quot;gem uninstall &amp;quot;+name[0]+&amp;quot; -a&amp;quot; )&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时候再运行 gem list 可以发现所有都已经被删除了。 那么接下来就删除 gem 了 通过下列命令获得Ruby的安装位置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &amp;quot;puts $:&amp;quot;
/usr/local/lib/ruby/site_ruby/1.9.1
/usr/local/lib/ruby/site_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/site_ruby
/usr/local/lib/ruby/vendor_ruby/1.9.1
/usr/local/lib/ruby/vendor_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/vendor_ruby
/usr/local/lib/ruby/1.9.1
/usr/local/lib/ruby/1.9.1/i686-linux&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除ruby安装的文件夹 以及一些link文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf /usr/local/lib/ruby/
rm -rf /usr/local/bin/gem
rm -rf /usr/local/bin/ruby
rm -rf /usr/bin/gem
rm -rf /usr/bin/ruby&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此Ruby RubyGems Rails已经成功 删除了。 总结下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如果要通过源码编译安装 建议通过 prefix 参数制定安装位置 安装Ruby 建议通过RVM， 方便管理和删除 通过源码编译的程序，最好保留源代码，因为作者可能提供 make uninstall 来卸载&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 
</feed>